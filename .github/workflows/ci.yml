name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request: {}
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.platform }} (py${{ matrix.python-version }}, j${{ matrix.java }})
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        java: [8, 11]
        python-version: [3.7, 3.8, 3.9]
        platform: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: ${{ matrix.java }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[testing]

      - name: Test
        run: pytest -v

      - name: Coverage
        if: runner.os == 'Linux'
        uses: codecov/codecov-action@v1

  deploy:
    name: Deploy
    needs: test
    if: "success() && startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: build
        run: |
          git tag
          pip install --upgrade pip
          pip install -U build check-manifest twine
          check-manifest
          python -m build

      - name: twine check
        run: |
          twine check dist/*
          ls -lh dist

      - name: Build and publish
        run: twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}
