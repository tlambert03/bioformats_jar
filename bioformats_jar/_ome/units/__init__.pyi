import java.lang
import bioformats_jar._ome.units.quantity
import bioformats_jar._ome.units.unit
import typing



class UNITS:
    RADIAN: typing.ClassVar[ome.units.unit.Unit] = ...
    VOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    HERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    METRE: typing.ClassVar[ome.units.unit.Unit] = ...
    INCH: typing.ClassVar[ome.units.unit.Unit] = ...
    WATT: typing.ClassVar[ome.units.unit.Unit] = ...
    PASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    KELVIN: typing.ClassVar[ome.units.unit.Unit] = ...
    SECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    YOTTAHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    ZETTAHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    EXAHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    PETAHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    TERAHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    GIGAHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    MEGAHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    KILOHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    HECTOHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    DECAHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    DECIHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    CENTIHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    MILLIHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    MICROHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    NANOHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    PICOHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    FEMTOHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    ATTOHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    ZEPTOHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    YOCTOHERTZ: typing.ClassVar[ome.units.unit.Unit] = ...
    YOTTAHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    ZETTAHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    EXAHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    PETAHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    TERAHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    GIGAHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    MEGAHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    KHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    HHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    DAHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    HZ: typing.ClassVar[ome.units.unit.Unit] = ...
    DHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    CHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    MHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    MICROHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    NHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    PHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    FHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    AHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    ZHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    YHZ: typing.ClassVar[ome.units.unit.Unit] = ...
    YOTTAMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    ZETTAMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    EXAMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    PETAMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    TERAMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    GIGAMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    MEGAMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    KILOMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    HECTOMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    DECAMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    DECIMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    CENTIMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    MILLIMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    MICROMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    NANOMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    PICOMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    FEMTOMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    ATTOMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    ZEPTOMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    YOCTOMETRE: typing.ClassVar[ome.units.unit.Unit] = ...
    YOTTAMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    ZETTAMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    EXAMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    PETAMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    TERAMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    GIGAMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    MEGAMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    KILOMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    HECTOMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    DECAMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    METER: typing.ClassVar[ome.units.unit.Unit] = ...
    DECIMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    CENTIMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    MILLIMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    MICROMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    NANOMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    PICOMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    FEMTOMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    ATTOMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    ZEPTOMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    YOCTOMETER: typing.ClassVar[ome.units.unit.Unit] = ...
    ANGSTROM: typing.ClassVar[ome.units.unit.Unit] = ...
    THOU: typing.ClassVar[ome.units.unit.Unit] = ...
    LINE: typing.ClassVar[ome.units.unit.Unit] = ...
    FOOT: typing.ClassVar[ome.units.unit.Unit] = ...
    YARD: typing.ClassVar[ome.units.unit.Unit] = ...
    MILE: typing.ClassVar[ome.units.unit.Unit] = ...
    ASTRONOMICALUNIT: typing.ClassVar[ome.units.unit.Unit] = ...
    LIGHTYEAR: typing.ClassVar[ome.units.unit.Unit] = ...
    PARSEC: typing.ClassVar[ome.units.unit.Unit] = ...
    POINT: typing.ClassVar[ome.units.unit.Unit] = ...
    PIXEL: typing.ClassVar[ome.units.unit.Unit] = ...
    REFERENCEFRAME: typing.ClassVar[ome.units.unit.Unit] = ...
    YOTTAM: typing.ClassVar[ome.units.unit.Unit] = ...
    ZETTAM: typing.ClassVar[ome.units.unit.Unit] = ...
    EXAM: typing.ClassVar[ome.units.unit.Unit] = ...
    PETAM: typing.ClassVar[ome.units.unit.Unit] = ...
    TERAM: typing.ClassVar[ome.units.unit.Unit] = ...
    GIGAM: typing.ClassVar[ome.units.unit.Unit] = ...
    MEGAM: typing.ClassVar[ome.units.unit.Unit] = ...
    KM: typing.ClassVar[ome.units.unit.Unit] = ...
    HM: typing.ClassVar[ome.units.unit.Unit] = ...
    DAM: typing.ClassVar[ome.units.unit.Unit] = ...
    M: typing.ClassVar[ome.units.unit.Unit] = ...
    DM: typing.ClassVar[ome.units.unit.Unit] = ...
    CM: typing.ClassVar[ome.units.unit.Unit] = ...
    MM: typing.ClassVar[ome.units.unit.Unit] = ...
    MICROM: typing.ClassVar[ome.units.unit.Unit] = ...
    NM: typing.ClassVar[ome.units.unit.Unit] = ...
    PM: typing.ClassVar[ome.units.unit.Unit] = ...
    FM: typing.ClassVar[ome.units.unit.Unit] = ...
    AM: typing.ClassVar[ome.units.unit.Unit] = ...
    ZM: typing.ClassVar[ome.units.unit.Unit] = ...
    YM: typing.ClassVar[ome.units.unit.Unit] = ...
    LI: typing.ClassVar[ome.units.unit.Unit] = ...
    IN: typing.ClassVar[ome.units.unit.Unit] = ...
    FT: typing.ClassVar[ome.units.unit.Unit] = ...
    YD: typing.ClassVar[ome.units.unit.Unit] = ...
    MI: typing.ClassVar[ome.units.unit.Unit] = ...
    UA: typing.ClassVar[ome.units.unit.Unit] = ...
    LY: typing.ClassVar[ome.units.unit.Unit] = ...
    PC: typing.ClassVar[ome.units.unit.Unit] = ...
    PT: typing.ClassVar[ome.units.unit.Unit] = ...
    YOTTAWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    ZETTAWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    EXAWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    PETAWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    TERAWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    GIGAWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    MEGAWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    KILOWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    HECTOWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    DECAWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    DECIWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    CENTIWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    MILLIWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    MICROWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    NANOWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    PICOWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    FEMTOWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    ATTOWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    ZEPTOWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    YOCTOWATT: typing.ClassVar[ome.units.unit.Unit] = ...
    YOTTAW: typing.ClassVar[ome.units.unit.Unit] = ...
    ZETTAW: typing.ClassVar[ome.units.unit.Unit] = ...
    EXAW: typing.ClassVar[ome.units.unit.Unit] = ...
    PETAW: typing.ClassVar[ome.units.unit.Unit] = ...
    TERAW: typing.ClassVar[ome.units.unit.Unit] = ...
    GIGAW: typing.ClassVar[ome.units.unit.Unit] = ...
    MEGAW: typing.ClassVar[ome.units.unit.Unit] = ...
    KW: typing.ClassVar[ome.units.unit.Unit] = ...
    HW: typing.ClassVar[ome.units.unit.Unit] = ...
    DAW: typing.ClassVar[ome.units.unit.Unit] = ...
    W: typing.ClassVar[ome.units.unit.Unit] = ...
    DW: typing.ClassVar[ome.units.unit.Unit] = ...
    CW: typing.ClassVar[ome.units.unit.Unit] = ...
    MW: typing.ClassVar[ome.units.unit.Unit] = ...
    MICROW: typing.ClassVar[ome.units.unit.Unit] = ...
    NW: typing.ClassVar[ome.units.unit.Unit] = ...
    PW: typing.ClassVar[ome.units.unit.Unit] = ...
    FW: typing.ClassVar[ome.units.unit.Unit] = ...
    AW: typing.ClassVar[ome.units.unit.Unit] = ...
    ZW: typing.ClassVar[ome.units.unit.Unit] = ...
    YW: typing.ClassVar[ome.units.unit.Unit] = ...
    YOTTAPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    ZETTAPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    EXAPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    PETAPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    TERAPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    GIGAPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    MEGAPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    KILOPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    HECTOPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    DECAPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    DECIPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    CENTIPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    MILLIPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    MICROPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    NANOPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    PICOPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    FEMTOPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    ATTOPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    ZEPTOPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    YOCTOPASCAL: typing.ClassVar[ome.units.unit.Unit] = ...
    BAR: typing.ClassVar[ome.units.unit.Unit] = ...
    MEGABAR: typing.ClassVar[ome.units.unit.Unit] = ...
    KILOBAR: typing.ClassVar[ome.units.unit.Unit] = ...
    DECIBAR: typing.ClassVar[ome.units.unit.Unit] = ...
    CENTIBAR: typing.ClassVar[ome.units.unit.Unit] = ...
    MILLIBAR: typing.ClassVar[ome.units.unit.Unit] = ...
    ATMOSPHERE: typing.ClassVar[ome.units.unit.Unit] = ...
    PSI: typing.ClassVar[ome.units.unit.Unit] = ...
    TORR: typing.ClassVar[ome.units.unit.Unit] = ...
    MILLITORR: typing.ClassVar[ome.units.unit.Unit] = ...
    MMHG: typing.ClassVar[ome.units.unit.Unit] = ...
    YOTTAPA: typing.ClassVar[ome.units.unit.Unit] = ...
    ZETTAPA: typing.ClassVar[ome.units.unit.Unit] = ...
    EXAPA: typing.ClassVar[ome.units.unit.Unit] = ...
    PETAPA: typing.ClassVar[ome.units.unit.Unit] = ...
    TERAPA: typing.ClassVar[ome.units.unit.Unit] = ...
    GIGAPA: typing.ClassVar[ome.units.unit.Unit] = ...
    MEGAPA: typing.ClassVar[ome.units.unit.Unit] = ...
    KPA: typing.ClassVar[ome.units.unit.Unit] = ...
    HPA: typing.ClassVar[ome.units.unit.Unit] = ...
    DAPA: typing.ClassVar[ome.units.unit.Unit] = ...
    PA: typing.ClassVar[ome.units.unit.Unit] = ...
    DPA: typing.ClassVar[ome.units.unit.Unit] = ...
    CPA: typing.ClassVar[ome.units.unit.Unit] = ...
    MPA: typing.ClassVar[ome.units.unit.Unit] = ...
    MICROPA: typing.ClassVar[ome.units.unit.Unit] = ...
    NPA: typing.ClassVar[ome.units.unit.Unit] = ...
    PPA: typing.ClassVar[ome.units.unit.Unit] = ...
    FPA: typing.ClassVar[ome.units.unit.Unit] = ...
    APA: typing.ClassVar[ome.units.unit.Unit] = ...
    ZPA: typing.ClassVar[ome.units.unit.Unit] = ...
    YPA: typing.ClassVar[ome.units.unit.Unit] = ...
    KBAR: typing.ClassVar[ome.units.unit.Unit] = ...
    DBAR: typing.ClassVar[ome.units.unit.Unit] = ...
    CBAR: typing.ClassVar[ome.units.unit.Unit] = ...
    MBAR: typing.ClassVar[ome.units.unit.Unit] = ...
    ATM: typing.ClassVar[ome.units.unit.Unit] = ...
    MTORR: typing.ClassVar[ome.units.unit.Unit] = ...
    CELSIUS: typing.ClassVar[ome.units.unit.Unit] = ...
    RANKINE: typing.ClassVar[ome.units.unit.Unit] = ...
    FAHRENHEIT: typing.ClassVar[ome.units.unit.Unit] = ...
    DEGREEC: typing.ClassVar[ome.units.unit.Unit] = ...
    K: typing.ClassVar[ome.units.unit.Unit] = ...
    DEGREER: typing.ClassVar[ome.units.unit.Unit] = ...
    DEGREEF: typing.ClassVar[ome.units.unit.Unit] = ...
    YOTTASECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    ZETTASECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    EXASECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    PETASECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    TERASECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    GIGASECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    MEGASECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    KILOSECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    HECTOSECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    DECASECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    DECISECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    CENTISECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    MILLISECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    MICROSECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    NANOSECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    PICOSECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    FEMTOSECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    ATTOSECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    ZEPTOSECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    YOCTOSECOND: typing.ClassVar[ome.units.unit.Unit] = ...
    MINUTE: typing.ClassVar[ome.units.unit.Unit] = ...
    HOUR: typing.ClassVar[ome.units.unit.Unit] = ...
    DAY: typing.ClassVar[ome.units.unit.Unit] = ...
    YOTTAS: typing.ClassVar[ome.units.unit.Unit] = ...
    ZETTAS: typing.ClassVar[ome.units.unit.Unit] = ...
    EXAS: typing.ClassVar[ome.units.unit.Unit] = ...
    PETAS: typing.ClassVar[ome.units.unit.Unit] = ...
    TERAS: typing.ClassVar[ome.units.unit.Unit] = ...
    GIGAS: typing.ClassVar[ome.units.unit.Unit] = ...
    MEGAS: typing.ClassVar[ome.units.unit.Unit] = ...
    KS: typing.ClassVar[ome.units.unit.Unit] = ...
    HS: typing.ClassVar[ome.units.unit.Unit] = ...
    DAS: typing.ClassVar[ome.units.unit.Unit] = ...
    S: typing.ClassVar[ome.units.unit.Unit] = ...
    DS: typing.ClassVar[ome.units.unit.Unit] = ...
    CS: typing.ClassVar[ome.units.unit.Unit] = ...
    MS: typing.ClassVar[ome.units.unit.Unit] = ...
    MICROS: typing.ClassVar[ome.units.unit.Unit] = ...
    NS: typing.ClassVar[ome.units.unit.Unit] = ...
    PS: typing.ClassVar[ome.units.unit.Unit] = ...
    FS: typing.ClassVar[ome.units.unit.Unit] = ...
    AS: typing.ClassVar[ome.units.unit.Unit] = ...
    ZS: typing.ClassVar[ome.units.unit.Unit] = ...
    YS: typing.ClassVar[ome.units.unit.Unit] = ...
    MIN: typing.ClassVar[ome.units.unit.Unit] = ...
    H: typing.ClassVar[ome.units.unit.Unit] = ...
    D: typing.ClassVar[ome.units.unit.Unit] = ...
    YOTTAVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    ZETTAVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    EXAVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    PETAVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    TERAVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    GIGAVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    MEGAVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    KILOVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    HECTOVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    DECAVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    DECIVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    CENTIVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    MILLIVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    MICROVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    NANOVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    PICOVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    FEMTOVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    ATTOVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    ZEPTOVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    YOCTOVOLT: typing.ClassVar[ome.units.unit.Unit] = ...
    YOTTAV: typing.ClassVar[ome.units.unit.Unit] = ...
    ZETTAV: typing.ClassVar[ome.units.unit.Unit] = ...
    EXAV: typing.ClassVar[ome.units.unit.Unit] = ...
    PETAV: typing.ClassVar[ome.units.unit.Unit] = ...
    TERAV: typing.ClassVar[ome.units.unit.Unit] = ...
    GIGAV: typing.ClassVar[ome.units.unit.Unit] = ...
    MEGAV: typing.ClassVar[ome.units.unit.Unit] = ...
    KV: typing.ClassVar[ome.units.unit.Unit] = ...
    HV: typing.ClassVar[ome.units.unit.Unit] = ...
    DAV: typing.ClassVar[ome.units.unit.Unit] = ...
    V: typing.ClassVar[ome.units.unit.Unit] = ...
    DV: typing.ClassVar[ome.units.unit.Unit] = ...
    CV: typing.ClassVar[ome.units.unit.Unit] = ...
    MV: typing.ClassVar[ome.units.unit.Unit] = ...
    MICROV: typing.ClassVar[ome.units.unit.Unit] = ...
    NV: typing.ClassVar[ome.units.unit.Unit] = ...
    PV: typing.ClassVar[ome.units.unit.Unit] = ...
    FV: typing.ClassVar[ome.units.unit.Unit] = ...
    AV: typing.ClassVar[ome.units.unit.Unit] = ...
    ZV: typing.ClassVar[ome.units.unit.Unit] = ...
    YV: typing.ClassVar[ome.units.unit.Unit] = ...
    DEGREE: typing.ClassVar[ome.units.unit.Unit] = ...
    GRADIAN: typing.ClassVar[ome.units.unit.Unit] = ...
    DEG: typing.ClassVar[ome.units.unit.Unit] = ...
    RAD: typing.ClassVar[ome.units.unit.Unit] = ...
    GON: typing.ClassVar[ome.units.unit.Unit] = ...
    def __init__(self): ...
    _ATTO__T = typing.TypeVar('_ATTO__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def ATTO(unit: bioformats_jar._ome.units.unit.Unit[_ATTO__T]) -> bioformats_jar._ome.units.unit.Unit[_ATTO__T]: ...
    _CENTI__T = typing.TypeVar('_CENTI__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def CENTI(unit: bioformats_jar._ome.units.unit.Unit[_CENTI__T]) -> bioformats_jar._ome.units.unit.Unit[_CENTI__T]: ...
    _DECA__T = typing.TypeVar('_DECA__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def DECA(unit: bioformats_jar._ome.units.unit.Unit[_DECA__T]) -> bioformats_jar._ome.units.unit.Unit[_DECA__T]: ...
    _DECI__T = typing.TypeVar('_DECI__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def DECI(unit: bioformats_jar._ome.units.unit.Unit[_DECI__T]) -> bioformats_jar._ome.units.unit.Unit[_DECI__T]: ...
    _EXA__T = typing.TypeVar('_EXA__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def EXA(unit: bioformats_jar._ome.units.unit.Unit[_EXA__T]) -> bioformats_jar._ome.units.unit.Unit[_EXA__T]: ...
    _FEMTO__T = typing.TypeVar('_FEMTO__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def FEMTO(unit: bioformats_jar._ome.units.unit.Unit[_FEMTO__T]) -> bioformats_jar._ome.units.unit.Unit[_FEMTO__T]: ...
    _GIGA__T = typing.TypeVar('_GIGA__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def GIGA(unit: bioformats_jar._ome.units.unit.Unit[_GIGA__T]) -> bioformats_jar._ome.units.unit.Unit[_GIGA__T]: ...
    _HECTO__T = typing.TypeVar('_HECTO__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def HECTO(unit: bioformats_jar._ome.units.unit.Unit[_HECTO__T]) -> bioformats_jar._ome.units.unit.Unit[_HECTO__T]: ...
    _KILO__T = typing.TypeVar('_KILO__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def KILO(unit: bioformats_jar._ome.units.unit.Unit[_KILO__T]) -> bioformats_jar._ome.units.unit.Unit[_KILO__T]: ...
    _MEGA__T = typing.TypeVar('_MEGA__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def MEGA(unit: bioformats_jar._ome.units.unit.Unit[_MEGA__T]) -> bioformats_jar._ome.units.unit.Unit[_MEGA__T]: ...
    _MICRO__T = typing.TypeVar('_MICRO__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def MICRO(unit: bioformats_jar._ome.units.unit.Unit[_MICRO__T]) -> bioformats_jar._ome.units.unit.Unit[_MICRO__T]: ...
    _MILLI__T = typing.TypeVar('_MILLI__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def MILLI(unit: bioformats_jar._ome.units.unit.Unit[_MILLI__T]) -> bioformats_jar._ome.units.unit.Unit[_MILLI__T]: ...
    _NANO__T = typing.TypeVar('_NANO__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def NANO(unit: bioformats_jar._ome.units.unit.Unit[_NANO__T]) -> bioformats_jar._ome.units.unit.Unit[_NANO__T]: ...
    _PETA__T = typing.TypeVar('_PETA__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def PETA(unit: bioformats_jar._ome.units.unit.Unit[_PETA__T]) -> bioformats_jar._ome.units.unit.Unit[_PETA__T]: ...
    _PICO__T = typing.TypeVar('_PICO__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def PICO(unit: bioformats_jar._ome.units.unit.Unit[_PICO__T]) -> bioformats_jar._ome.units.unit.Unit[_PICO__T]: ...
    _TERA__T = typing.TypeVar('_TERA__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def TERA(unit: bioformats_jar._ome.units.unit.Unit[_TERA__T]) -> bioformats_jar._ome.units.unit.Unit[_TERA__T]: ...
    _YOCTO__T = typing.TypeVar('_YOCTO__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def YOCTO(unit: bioformats_jar._ome.units.unit.Unit[_YOCTO__T]) -> bioformats_jar._ome.units.unit.Unit[_YOCTO__T]: ...
    _YOTTA__T = typing.TypeVar('_YOTTA__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def YOTTA(unit: bioformats_jar._ome.units.unit.Unit[_YOTTA__T]) -> bioformats_jar._ome.units.unit.Unit[_YOTTA__T]: ...
    _ZEPTO__T = typing.TypeVar('_ZEPTO__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def ZEPTO(unit: bioformats_jar._ome.units.unit.Unit[_ZEPTO__T]) -> bioformats_jar._ome.units.unit.Unit[_ZEPTO__T]: ...
    _ZETTA__T = typing.TypeVar('_ZETTA__T', bound=ome.units.quantity.Quantity)  # <T>
    @staticmethod
    def ZETTA(unit: bioformats_jar._ome.units.unit.Unit[_ZETTA__T]) -> bioformats_jar._ome.units.unit.Unit[_ZETTA__T]: ...
    def getName(self) -> java.lang.String: ...


class __module_protocol__(typing.Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("ome.units")``.

    UNITS: typing.Type[UNITS]
    quantity: bioformats_jar._ome.units.quantity.__module_protocol__
    unit: bioformats_jar._ome.units.unit.__module_protocol__
